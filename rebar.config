{erl_opts, [debug_info, {d, 'COWBOY_QUICER', 1}, {d, 'GUN_QUICER', 1}]}.
{plugins, [pc, rebar3_rustler, rebar_edown_plugin]}.

{profiles, [
    {no_events, [{erl_opts, [{d, 'NO_EVENTS', true}]}]},
    {store_events, [{erl_opts, [{d, 'STORE_EVENTS', true}]}]},
    {ao_profiling, [{erl_opts, [{d, 'AO_PROFILING', true}]}]},
    {eflame,
        [
            {deps,
                [
                    {eflame,
                        {git,
                            "https://github.com/samcamwilliams/eflame.git",
                            {ref, "d81a6e174956b4b0aca13363d51e4f51a5fabbd2"}
                        }
                    }
                ]
            },
            {erl_opts, [{d, 'ENABLE_EFLAME', true}]}
        ]
    },
    {genesis_wasm, [
        {erl_opts, [{d, 'ENABLE_GENESIS_WASM', true}]},
        {pre_hooks, [
            {compile, "make -C \"${REBAR_ROOT_DIR}\" setup-genesis-wasm"}
        ]},
        {relx, [
            {overlay, [
                {copy,
                    "_build/genesis_wasm/genesis-wasm-server",
                    "genesis-wasm-server"
                }
            ]}
        ]}
    ]},
    {rocksdb, [
        {deps, [{rocksdb, "1.8.0"}]},
        {erl_opts, [
            {d, 'ENABLE_ROCKSDB', true}
        ]}
    ]},
    {http3, [
        {deps, [
            {quicer, {git, "https://github.com/emqx/quic.git",
                {ref, "e2e9ab3e1ec53e20d5f9401359cc6ee8f971d112"}}
            }
        ]},
        {erl_opts, [
            {d, 'ENABLE_HTTP3', true},
            {d, 'COWBOY_QUICER', 1},
            {d, 'GUN_QUICER', 1}
        ]},
        {overrides, [
            {add, cowboy, [{erl_opts, [{d, 'COWBOY_QUICER', 1}]}]},
            {add, gun, [{erl_opts, [{d, 'GUN_QUICER', 1}]}]}
        ]}
    ]}
]}.

{cargo_opts, [
    {src_dir, "native/dev_snp_nif"},
    {src_dir, "deps/elmdb/native/elmdb_nif"}
]}.

{overrides, []}.

{pre_hooks, [
    {compile, "bash -c \"echo '-define(HB_BUILD_SOURCE, <<\\\"$(git rev-parse HEAD)\\\">>).\n' > ${REBAR_ROOT_DIR}/_build/hb_buildinfo.hrl\""},
    {compile, "bash -c \"echo '-define(HB_BUILD_SOURCE_SHORT, <<\\\"$(git rev-parse --short HEAD)\\\">>).\n' >> ${REBAR_ROOT_DIR}/_build/hb_buildinfo.hrl\""},
    {compile, "bash -c \"echo '-define(HB_BUILD_TIME, $(date +%s)).\n' >> ${REBAR_ROOT_DIR}/_build/hb_buildinfo.hrl\""},
	{compile, "make -C \"${REBAR_ROOT_DIR}\" wamr"}
]}.

{port_env, [
	{"(linux|darwin|solaris)", "CFLAGS",
		"$CFLAGS -I${REBAR_ROOT_DIR}/_build/wamr/core/iwasm/include -I/usr/local/lib/erlang/usr/include/"},
	{"(linux|darwin|solaris)", "LDFLAGS", "$LDFLAGS -L${REBAR_ROOT_DIR}/_build/wamr/lib -lvmlib -lei"},
	{"(linux|darwin|solaris)", "LDLIBS", "-lei"}
]}.

{post_hooks, [
	{"(linux|darwin|solaris)", clean, "rm -rf \"${REBAR_ROOT_DIR}/_build\" \"${REBAR_ROOT_DIR}/priv\""},
	{"(linux|darwin|solaris)", compile, "echo 'Post-compile hooks executed'"},
    { compile, "rm -f native/hb_beamr/*.o native/hb_beamr/*.d"},
    { compile, "rm -f native/hb_keccak/*.o native/hb_keccak/*.d"},
    { compile, "mkdir -p priv/html"},
    { compile, "cp -R src/html/* priv/html"},
    { compile, "cp _build/default/lib/elmdb/priv/crates/elmdb_nif/elmdb_nif.so _build/default/lib/elmdb/priv/elmdb_nif.so 2>/dev/null || true" }
]}.

{provider_hooks, [
    {pre, [
        {compile, {cargo, build}}
    ]},
    {post, [
        {compile, {pc, compile}},
        {clean, {pc, clean}},
        {clean, {cargo, clean}}
    ]}
]}.

{port_specs, [
	{"./priv/hb_beamr.so", [
        "./native/hb_beamr/hb_beamr.c",
        "./native/hb_beamr/hb_wasm.c",
        "./native/hb_beamr/hb_driver.c",
        "./native/hb_beamr/hb_helpers.c",
        "./native/hb_beamr/hb_logging.c"
    ]},
	{"./priv/hb_keccak.so", [
		"./native/hb_keccak/hb_keccak.c",
		"./native/hb_keccak/hb_keccak_nif.c"
	]}
]}.

{deps, [
    {elmdb, { git, "https://github.com/twilson63/elmdb-rs.git", {branch, "e31f5f6f78998985cf62c2603d71bd2c4ddd5353" }}},
	{b64fast, {git, "https://github.com/ArweaveTeam/b64fast.git", {ref, "58f0502e49bf73b29d95c6d02460d1fb8d2a5273"}}},
	{cowboy, {git, "https://github.com/ninenines/cowboy", {ref, "022013b6c4e967957c7e0e7e7cdefa107fc48741"}}},
	{gun, {git, "https://github.com/ninenines/gun", {ref, "8efcedd3a089e6ab5317e4310fed424a4ee130f8"}}},
	{graphql, "0.17.1", {pkg, graphql_erl}},
	{prometheus, "4.11.0"},
	{prometheus_cowboy, "0.1.8"},
    {gun, "0.10.0"},
    {luerl, "1.3.0"}
]}.

{shell, [
	{apps, [hb]}
]}.

{eunit, [
	{apps, [hb]}
]}.

% Increase `scale_timeouts` when running on a slower machine.
{eunit_opts, [verbose, {scale_timeouts, 10}]}.

{relx, [
	{release, {'hb', "0.0.1"}, [hb, b64fast, cowboy, gun, luerl, prometheus, prometheus_cowboy, elmdb]},
	{include_erts, true},
	{extended_start_script, true},
	{overlay, [
		{mkdir, "bin/priv"},
		{copy, "priv", "bin/priv"},
		{copy, "config.flat", "config.flat"}
	]}
]}.

{dialyzer, [
	{plt_extra_apps, [public_key, ranch, cowboy, prometheus, prometheus_cowboy, b64fast, eunit, gun]},
	incremental,
	{warnings, [no_improper_lists, no_unused]}
]}.

{alias, [
    {debugger,
        [
            {shell, "--sname hb --setcookie hb-debug --eval hb_debugger:start()."}
        ]
    },
    {'lua-test',
        [
            {eunit, "--module dev_lua_test"}
        ]
    },
    {'deploy-scripts',
        [
            {shell, "--eval hb:deploy_scripts()."}
        ]
    }
]}.

{edoc_opts, [
    {doclet, edown_doclet},
	{dir, "docs/resources/source-code"},
    {preprocess, true},
	{preprocess, true},
	{private, true},
	{hidden, true}
]}.